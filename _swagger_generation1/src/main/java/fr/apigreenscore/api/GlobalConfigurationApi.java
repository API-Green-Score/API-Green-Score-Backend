/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package fr.apigreenscore.api;

import fr.apigreenscore.model.GlobalConfiguration;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-01-15T22:08:39.761998+01:00[Europe/Paris]")
@Validated
@Tag(name = "global_configuration", description = "the global_configuration API")
public interface GlobalConfigurationApi {

    default GlobalConfigurationApiDelegate getDelegate() {
        return new GlobalConfigurationApiDelegate() {};
    }

    /**
     * GET /global_configuration : Get global configuration data
     * Get all data about global configuration of evaluation grid (table notes, section weigths, global note)
     *
     * @return Success (status code 200)
     */
    @Operation(
        operationId = "getGlobalConfiguration",
        summary = "Get global configuration data",
        description = "Get all data about global configuration of evaluation grid (table notes, section weigths, global note)",
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GlobalConfiguration.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/global_configuration",
        produces = { "application/json" }
    )
    
    default ResponseEntity<GlobalConfiguration> getGlobalConfiguration(
        
    ) {
        return getDelegate().getGlobalConfiguration();
    }

}
