<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.apithinking</groupId>
    <artifactId>api-greenscore</artifactId>
    <version>0.1-SNAPSHOT</version>

    <name>${project.artifactId}</name>

    <properties>

        <!-- ============================================================== -->
        <!-- PROPRIETES DE L'APPLICATION -->
        <!-- ============================================================== -->

        <application.name>api-greenscore</application.name>
        <application.version>${project.version}</application.version>
        <application.finalname>api-greenscore-0</application.finalname>

        <!-- ============================================================== -->
        <!-- PROPRIETES DE L'API -->
        <!-- ============================================================== -->

        <api.name>api-greenscore</api.name>
        <api.version>0</api.version>

        <configLogging>src/main/config/logging/docker</configLogging>
        <resource.delimiter>@</resource.delimiter>

        <!-- TODO DDC : voir pb spring-data-mongodb avec dernière version socle-tec -->
<!--        <socle-technique.version>5.1-20240207213338</socle-technique.version>-->
        <socle-technique.version>5.1-20240124222548</socle-technique.version>

        <embedded-testcontainers.version>3.1.4</embedded-testcontainers.version>
        <assertj-core.version>3.25.3</assertj-core.version>

        <mapstruct.version>1.5.5.Final</mapstruct.version>

        <!-- A GARDER : version JDK utilisé pour la compilation et la compatibilité -->
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- A GARDER : encoding du code source et des rapports -->
        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

<!--        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>-->
<!--        <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>-->

        <!-- gestion de profile pour les modules springboot
            + si "application.yml" contenant la conf suivante :
            profiles:
                active: @springboot.profile.name@

            ==> ici : profile par defaut de springboot
        -->
        <springboot.profile.name>default</springboot.profile.name>

        <!-- ============================================================== -->
        <!-- PROPRIETE POUR EXCLUSION SONAR                                 -->
        <!-- ============================================================== -->

        <!--Exclusion pour le coverage  -->
        <sonar.coverage.exclusions>
            **/annotation*/**/*,
            **/bean*/**/*,
            **/constant*/**/*,
            **/dto*/**/*,
            **/entity/**,
            **/entities/**,
            **/enums/**,
            **/exception*/**/*,
            **/model*/**/*,
            **/*SmokeTest*,
            **/*Application*
        </sonar.coverage.exclusions>

        <!--Exclusion pour les duplications de ligne de code  -->
        <sonar.cpd.exclusions>
            **/annotation*/**/*,
            **/bean*/**/*,
            **/dto*/**/*,
            **/entity/**,
            **/entities/**,
            **/enums/**,
            **/model*/**/*
        </sonar.cpd.exclusions>
        <sonar.exclusions>
            **/src/main/webapp/**
        </sonar.exclusions>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fr.pagesjaunes.socletechnique</groupId>
                <artifactId>socle-technique-dependencies</artifactId>
                <version>${socle-technique.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- ###################### -->
        <!-- ###  DEBUT socle-technique-starter-core ### -->
        <!-- ###################### -->
        <!-- SpringBoot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <!-- Socle technique -->
        <dependency>
            <groupId>fr.pagesjaunes.socletechnique</groupId>
            <artifactId>socle-technique-core</artifactId>
        </dependency>
        <dependency>
            <groupId>fr.pagesjaunes.socletechnique</groupId>
            <artifactId>socle-technique-promethee</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>fr.pagesjaunes.socletechnique</groupId>-->
<!--            <artifactId>socle-technique-starter-core</artifactId>-->
<!--        </dependency>-->
        <!-- ###################### -->
        <!-- ###  FIN socle-technique-starter-core ### -->
        <!-- ###################### -->

        <!-- ###################### -->
        <!-- ###  DEBUT socle-technique-web ### -->
        <!-- ###################### -->
        <dependency>
            <groupId>fr.pagesjaunes.socletechnique</groupId>
            <artifactId>socle-technique-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>fr.pagesjaunes.socletechnique</groupId>
            <artifactId>socle-technique-httpclient</artifactId>
            <optional>true</optional>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>fr.pagesjaunes.socletechnique</groupId>-->
<!--            <artifactId>socle-technique-web</artifactId>-->
<!--        </dependency>-->
        <!-- ###################### -->
        <!-- ###  FIN socle-technique-web ### -->
        <!-- ###################### -->

        <!-- Swagger / OpenAPI v3 -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>

        <!-- Hibernate validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- Socle Technique Starter Web -->
<!--        <dependency>-->
<!--            <groupId>fr.pagesjaunes.socletechnique</groupId>-->
<!--            <artifactId>socle-technique-starter-web</artifactId>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <!--  Gson: Java to JSON conversion -->
<!--        <dependency>-->
<!--            <groupId>com.google.code.gson</groupId>-->
<!--            <artifactId>gson</artifactId>-->
<!--            <version>2.10.1</version>-->
<!--            <scope>compile</scope>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- ============================================================== -->
        <!-- TEST -->
        <!-- ============================================================== -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.playtika.testcontainers</groupId>
            <artifactId>embedded-mongodb</artifactId>
            <version>${embedded-testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

<!--        <finalName>${project.artifactId}</finalName>-->
        <finalName>${application.finalname}</finalName>

        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application*.yml</include>
                    <include>**/application*.properties</include>
                    <include>**/bootstrap*.yml</include>
                    <include>**/bootstrap*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/application*.yml</exclude>
                    <exclude>**/application*.properties</exclude>
                    <exclude>**/bootstrap*.yml</exclude>
                    <exclude>**/bootstrap*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>

                <!-- A GARDER : plugin core à garder car config commune sur le filtering des fichiers à prendre en compte -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                    <configuration>
                        <delimiters>
                            <delimiter>${resource.delimiter}</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jpeg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>gif</nonFilteredFileExtension>
                            <nonFilteredFileExtension>bmp</nonFilteredFileExtension>
                            <nonFilteredFileExtension>png</nonFilteredFileExtension>
                            <nonFilteredFileExtension>tiff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                            <nonFilteredFileExtension>doc</nonFilteredFileExtension>
                            <nonFilteredFileExtension>docx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>gzip</nonFilteredFileExtension>
                            <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                            <nonFilteredFileExtension>gz</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>

                <!-- A GARDER : plugin core à garder car référencé dans les pom.xml des webapps
                (pour skipper le deploy des webapps car inutile)
                -->
<!--                <plugin>-->
<!--                    <groupId>org.apache.maven.plugins</groupId>-->
<!--                    <artifactId>maven-deploy-plugin</artifactId>-->
<!--                    <version>2.8.2</version>-->
<!--                </plugin>-->

                <!-- A GARDER : plugin core à garder car conf "excludes" -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
<!--                    <version>${maven-surefire-plugin.version}</version>-->
                    <version>2.22.2</version>
                    <configuration>
                        <enableAssertions>false</enableAssertions>
                        <excludes>
                            <exclude>**/*$*.class</exclude>
                            <exclude>**/*SmokeTest.class</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                        <includes>
                            <include>**/*IT.class</include>
                            <include>**/*TI.class</include>
                        </includes>
                        <excludes>
                            <exclude>**/*PIT.class</exclude>
                            <exclude>**/*$*.class</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- A GARDER : plugins core de packaging car utilisé dans les modules -->
<!--                <plugin>-->
<!--                    <groupId>org.apache.maven.plugins</groupId>-->
<!--                    <artifactId>maven-war-plugin</artifactId>-->
<!--                    <version>3.4.0</version>-->
<!--                </plugin>-->

                <!-- A GARDER : pour que SELMA puisse fonctionner avec Lombok -->
<!--                <plugin>-->
<!--                    <groupId>org.projectlombok</groupId>-->
<!--                    <artifactId>lombok-maven-plugin</artifactId>-->
<!--                    <version>1.18.20.0</version>-->
<!--                </plugin>-->

                <!-- A GARDER : pour builder les appli springboot -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <!-- garder la même version de springboot du socle-tec-4 -->
                    <version>2.6.6</version>
                    <executions>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>add-config-resources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${configLogging}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.12.1</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.30</version>
                        </path>
                        <dependency>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </dependency>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <compilerArg>
                            -Amapstruct.defaultComponentModel=spring
                        </compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- A GARDER : plugins core de packaging car utilisés dans les modules -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>attach-source</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

    <profiles>
        <profile>
            <id>ci</id>
            <properties>
                <configLogging>src/main/config/logging/ci</configLogging>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <configLogging>src/main/config/logging/dev</configLogging>
                <!-- activation automatique du profile "dev" pour les modules avec du springboot
                    + utilisation du fichier "application-dev.yml" si trouvé
                    + si "application.yml" contenant la conf suivante :
                    profiles:
                      active: @springboot.profile.name@
                -->
                <springboot.profile.name>dev</springboot.profile.name>
            </properties>
        </profile>

        <!-- ============================================================== -->
        <!-- PROFIL QUI S'EXECUTE POUR LES TESTS D'INTEGRATION              -->
        <!-- ============================================================== -->
        <profile>
            <id>integration-test</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
<!--                        <version>${maven-surefire-plugin.version}</version>-->
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    <!-- A GARDER dans ce profile pour activer le lancement -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile pour envoi metrics à SONAR (Sonar Groupe) -->
        <profile>
            <id>coverage</id>
            <properties>
                <!-- pour éviter que le step SONAR crash sur les tests : l'objectif est d'envoyer les metrics à Sonar (même en cas de crash de tests) -->
                <maven.test.failure.ignore>true</maven.test.failure.ignore>
            </properties>
            <build>
                <plugins>
                    <!-- Activation de l'agent jacoco pour générer les rapports de coverage -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
<!--                        <version>${jacoco-maven-plugin.version}</version>-->
                        <version>0.8.11</version>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <phase>test</phase>
                            </execution>
                            <execution>
                                <id>prepare-agent-integration</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report-integration</id>
                                <goals>
                                    <goal>report-integration</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
